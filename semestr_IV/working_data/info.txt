
результат = re.match(шаблон, джерело)
Функція match() перевіряє, чи починається джерело з шаблону.
Для більш складних перевірок необхідно скомпілювати шаблон, щоб прискорити пошук:
патерн = re.compile(шаблон)
	Патерн - шаблон, зразок.
Далі виконується перевірка за допомогою скомпільованого шаблону:
результат = патерн.match(джерело)
Крім функції match(), порівняти шаблон і джерело можна за допомогою ще кількох функцій:
•	search() - повертає перший збіг, якщо такий є
•	findall() - повертає список усіх збігів, які не перетинаються один з одним, якщо такі є


Таблиця "Специфікатори порядку байтів"
Специфікатор	Порядок байтів
<	Прямий
>	Зворотний
	Специфікатори порядку байтів розташовуються першими у рядку формату.
Таблиця "Специфікатори формату"
Специфікатор	Опис	Кількість байтів
X	Пропустити байт	1
B	Знаковий байт	1
B	Беззнаковий байт	1
H	Знакове коротке ціле число	2
H	Беззнакове коротке ціле число	2
I	Знакове ціле число	4
I	Беззнакове ціле число	4
L	Знакове довге ціле число	4
L	Беззнакове довге ціле число	4
Q	Беззнакове дуже довге ціле число	8
F	Число з плаваючою крапкою	4
D	Число з плаваючою крапкою подвійної точності	8
P	Лічильник і символи	1 + count
S	Символи	Count





#Working byte
import struct 
valid_png_header = b'\x89PNG\r\n\x1a\n' 
f = open('nasa_logo.png', 'rb') 
data = f.read(30) 
if data[:8] == valid_png_header: 
    width, height = struct.unpack('>LL', data[16:24]) 
    print('Valid PNG, width', width, 'height', height)
else:
    print('Not a valid PNG')
f.close()



Таблиця "Спеціальні символи"
Шаблон	Співпадіння
\d	цифровий символ
\D	нецифровий символ
\w	буквенний або цифровий символ або знак підкреслення
\W	будь-який символ, крім буквенного або цифрового символа або знака підкреслення
\s	символи пропусків
\S	символи, крім символів пропусків
\b	межа слова
\B	не межа слова
\+   + 
\(  (
\)   )    
 

Таблиця "Специфікатори шаблонів"
Шаблон	Співпадіння
Abc	буквосполучення abc
(expr)	Expr
expr1 | expr2	expr1 або expr2
.	будь-який символ, крім \n
ˆ	початок рядка
$	кінець рядка
prev?	нуль або одне включення prev
prev*	нуль або більше включень prev, максимальна кількість
prev*?	нуль або більше включень prev, мінімальна кількість
prev+	одне або більше включень prev, максимальна кількість
prev+?	одне або більше включень prev, мінімальна кількість
prev{m}	m послідовних включень expr
expr{m,n}	від m до n послідовних включень prev, максимальна кількість
expr{m,n}?	від m до n послідовних включень prev, мінімальна кількість
[abc]	a, або b, або c
[^abc]	не (a, або b, або c)
prev(?=next)	prev, якщо за ним слідує next
prev(?!next)	prev, якщо за ним не слідує next
(?<=prev) next	next, якщо перед ним знаходиться prev
(?<!prev) next	next, якщо перед ним не знаходиться prev
