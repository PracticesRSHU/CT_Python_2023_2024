Робота з регулярними виразами в Python передбачає використання можливостей модуля re
результат = re.match(шаблон, джерело)
Функція match() перевіряє, чи починається джерело з шаблону.
Для більш складних перевірок необхідно скомпілювати шаблон, щоб прискорити пошук:
патерн = re.compile(шаблон)
	Патерн - шаблон, зразок.
Далі виконується перевірка за допомогою скомпільованого шаблону:
результат = патерн.match(джерело)
Крім функції match(), порівняти шаблон і джерело можна за допомогою ще кількох функцій:
•	search() - повертає перший збіг, якщо такий є
•	findall() - повертає список усіх збігів, які не перетинаються один з одним, якщо такі є

Отже, найбільш поширеними та використовуваними функціями модуля re для виявлення збігів є:
■ re.search(pattern, strObj) — шукає у рядку strObj перший збіг із шаблоном pattern;
■ re.findall(pattern, strObj) — шукає у рядку strObj усі збіги (які не перетинаються) з шаблоном pattern (результат — список рядків, що збіглися з шаблоном);
    Залежно від того, чи є в шаблоні групи, результат,  який повертається функцією findall(), може бути:
        ■ Список рядків, які відповідають шаблону (якщо у шаблоні немає груп);
        ■ Список рядків, які відповідають фрагменту шаблону у групі (якщо у шаблоні лише одна група);
        ■ Список кортежів, що складаються з рядків, які відповідають фрагментам шаблону в групах (якщо груп  у шаблоні декілька).

■ re.match(pattern, strObj) — шукає на початку рядка strObj збіг із шаблоном pattern.

Крім функцій пошуку збігів, модуль re надає нам ще такі корисні функції, як:
re.sub() для заміни знайдених збігів на новий фрагмент 
re.split() для розбиття рядка по фрагментах, які збігаються з шаблоном.




Таблиця "Специфікатори порядку байтів"
Специфікатор	Порядок байтів
<	Прямий
>	Зворотний
	Специфікатори порядку байтів розташовуються першими у рядку формату.
Таблиця "Специфікатори формату"
Специфікатор	Опис	Кількість байтів
X	Пропустити байт	1
B	Знаковий байт	1
B	Беззнаковий байт	1
H	Знакове коротке ціле число	2
H	Беззнакове коротке ціле число	2
I	Знакове ціле число	4
I	Беззнакове ціле число	4
L	Знакове довге ціле число	4
L	Беззнакове довге ціле число	4
Q	Беззнакове дуже довге ціле число	8
F	Число з плаваючою крапкою	4
D	Число з плаваючою крапкою подвійної точності	8
P	Лічильник і символи	1 + count
S	Символи	Count





#Working byte
import struct 
valid_png_header = b'\x89PNG\r\n\x1a\n' 
f = open('nasa_logo.png', 'rb') 
data = f.read(30) 
if data[:8] == valid_png_header: 
    width, height = struct.unpack('>LL', data[16:24]) 
    print('Valid PNG, width', width, 'height', height)
else:
    print('Not a valid PNG')
f.close()



Таблиця "Спеціальні символи"
Шаблон	Співпадіння
\d	цифровий символ
\D	нецифровий символ
\w	буквенний або цифровий символ або знак підкреслення
\W	будь-який символ, крім буквенного або цифрового символа або знака підкреслення
\s	символи пропусків
\S	символи, крім символів пропусків
\b	межа слова
\B	не межа слова
\+   + 
\(  (
\)   )    
 

Таблиця "Специфікатори шаблонів"
Шаблон	Співпадіння
Abc	буквосполучення abc
(expr)	Expr
expr1 | expr2	expr1 або expr2
.	будь-який символ, крім \n
ˆ	початок рядка
$	кінець рядка
prev?	нуль або одне включення prev
prev*	нуль або більше включень prev, максимальна кількість
prev*?	нуль або більше включень prev, мінімальна кількість
prev+	одне або більше включень prev, максимальна кількість
prev+?	одне або більше включень prev, мінімальна кількість
prev{m}	m послідовних включень expr
expr{m,n}	від m до n послідовних включень prev, максимальна кількість
expr{m,n}?	від m до n послідовних включень prev, мінімальна кількість
[abc]	a, або b, або c
[^abc]	не (a, або b, або c)
prev(?=next)	prev, якщо за ним слідує next
prev(?!next)	prev, якщо за ним не слідує next
(?<=prev) next	next, якщо перед ним знаходиться prev
(?<!prev) next	next, якщо перед ним не знаходиться prev

========================================================================

Метасимвол      Призначення
.               Завдання (представлення) одного довільного символу (крім символу нового рядка)
^               Ознака початку послідовності
$               Ознака закінчення послідовності
*               Позначає будь-яку кількість повторень одного символу (0 або більше), що передує символу «*»
+               Позначає будь-яку кількість повторень одного символу (1 або більше), попереднього до символу «+»
?               Позначає нуль або одне повторення одного символу, попереднього до символу «?»
{n}             Позначає задане число (n) повторень одного символу, попереднього до символу «{»
[]              Використовується для задання будь-якого символу з перелічених всередині []
\               Використовується для екранування метасимволів
|               Відповідає логічному АБО (значення до або після символу «|»)
()              Для створення групи символів (вираз усередині) розглядається як один елемент

Приклад: "admin"  ("admin123", "user_admin","adminadmin"- yes, "adm345" - no)
'(admin)+'

'['+string.ascii_lowercase+']'+'+'




Шаблон  Призначення
\d      Відповідає одній десятковій цифрі
\D      Відповідає одному будь-якому символу, крім десяткової цифри
\s      Відповідає одному (будь-якому) пробільному (space) символу
\S      Відповідає одному (будь-якому) символу, який не відноситься до пробільних (space)
\w      Відповідає будь-якому символу з літер і цифр або символу нижнього підкреслення («_»)
\W      Відповідає будь-якому символу не з літер та цифр, та не символу нижнього підкреслення («_») 
[..]    Відповідає будь-якому з символів, перелічених у дужках, можна також вказувати діапазони символів (наприклад,
        [0-5] — будь-яка цифра від 0 до 5). 
        Увага! Метасимволи всередині [] втрачають своє спеціальне значення і позначають просто символ. Наприклад,
        точка всередині [] позначатиме саме точку, а не будь-який символ.
[^..]   Відповідає будь-якому одному символу, крім перелічених у дужках або крім тих, що потрапляють до зазначеного діапазону.
\b      Відповідає початку або кінцю слова (тобто ліворуч від \b пробіл або не літерний символ, праворуч буква і навпаки – для
        кінця слова).  На відміну від попередніх шаблонів, вона відповідає позиції, а не символу.
\B      Відповідає «внутрішньому» (неграничному) символу слова (тобто ліворуч і праворуч від \B літерні символи,
         або зліва і праворуч від \B не літерні символи).

наприклад, r"course\d\d"  => course26, mycourse05
           r"part\D001" => part&001, part@001, mypart%001 -> yes
                            part0012 -> no
           r"^part\D001" => part&001, part@001, part@001hello  -> yes
                            part0012, mypart%001 -> no 

          r"course.topic.part.a"  => course1topic3part4a
          r"\w\w2024"  =>  y_2024, tt2024, 052024 
          r"[0-5][6-9A-Da-d]" => 1A, 5b  
          r"([^D-Fd-f])" => 3, h, k => yes
                            D, F => no     
          r"hellok+" => hellok,hellokkk


Квантифікатор   Кількість повторень, що задається
{n}             дорівнює n
{m,n}           від m до n (включно)
{m,}            від m і більше (не менше, ніж m)
{,n}            до n (не більше, ніж n)
?               нуль або одне
*               нуль або більше нуля (від нуля включно)
+               одне або більше одного (як мінімум одне)

Наприклад, student\d{5}  =>student12345, student36245
           student\d{3,5}  =>student12345, student363,student3637
           student\d{3,}  =>student12345, student363,student3637,student363754756875
           student\d{,2}  =>student12, student3
           user\d*        => user, user1, user343434
           user\d+        => user1, user343434

