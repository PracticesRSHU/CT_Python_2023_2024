Шаблон  проектування Visitor (Відвідувач) застосовується
якщо необхідно відділити певний алгоритм від об’єктів 
для яких цей алгоритм має бути виконаний. 
Він дозволяє додавати нові операції у існуючі структури без змін
самих структур, що у свою чергу дозволяє уникнути процесу
«засмічування» цими операціям самих класів.

Шаблон Visitor (Відвідувач) складається з кількох частин, що взаємодіють між собою:
• Відвідувач (Visitor) – абстрактний клас, що визначає дію над кожним
  класом конкретних елементів.  Містить абстрактний метод visit(obj : ConcreteElement).
• Конкретний відвідувач (ConcreteVisitor) – нащадок класу Visitor –
  заміщує абстрактний метод visit(obj : ConcreteElement) конкретною
  реалізацією.
• Елемент (Element) – абстрактний клас, що визначає метод  accept(visitor : Visitor),
  який отримує об’єкт відвідувача як аргумент.
• Конкретний елемент (ConcreteElement) – конкретний клас, нащадок класу
  Елемент, що заміщує метод accept(visitor : Visitor), який отримує
  об’єкт відвідувача як аргумент.
• Клієнт (Client) – структура елементів, надає високорівневий інтерфейс, що
  дозволяє відвідувачу опрацьовувати елементи.


  Зв’язок екземпляра класу Елемент і Відвідувача відбувається таким чином:
    • Для елемента викликається метод accept() фактичним параметром
      якого є конкретний відвідувач (елемент приймає відвідувача)
    • В свою чергу для цього відвідувача викликається метод visit()
      параметром якого є сам елемент.
    • Відвідувач, у методі visit() здійснює перевірку до якого класу належить
      елемент і залежно від цього здійснює відповідний перелік дій.


